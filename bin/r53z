#!/usr/bin/env ruby

require 'optparse'
require 'methadone'
require 'r53z.rb'

class App
  include Methadone::Main
  include Methadone::CLILogging

  main do |*args|
    help_now! "No options provided." if options.empty? 
    R53z::Cli.new(:options => options, :args => args)
  end

  # Command line interface specification
  description "Simple CLI to manage, backup, and restore, Route 53 zones"
  #
  # Accept flags via:
  on("-x DIR", "--export", "Export zones to files in specified directory, optionally specify one or more zones.")
  on("-r DIR", "--restore", "Restore zone from directory, optionally specify one or more zones.")
  on("-l", "--list", "List name and ID of one or all zones.")
  on("-s", "--record-sets", "List record sets for the given zone.")
  on("-c NAME", "--create", "Create a zone with the given name and optional --comment and --delegation-set.")
  on("-n COMMENT", "--comment", "Optional comment when creating a zone.")
  on("-d", "--delete", "Delete one or more zone(s) by name (WARNING: No confirmation!)")
  on("-C FILE", "--credentials", "File containing credentials information.")
  on("-u SECTION", "--section", "Section (user) in the credentials file to use.")
  on("-g ID", "--delegation-set", "Delegation set ID to use for various operations.")
  on("-t", "--list-delegation-sets", "List delegation set for named zone, or all sets if no zone specified.")
  on("-S", "--create-delegation-sets", "Create one or more delegation sets, optionally associated with listed zones.")
  on("-D", "--delete-delegation-sets", "Delete one or more delegation sets by ID (WARNING: No confirmation!)")
  on("-N ID", "--name-servers", "List name servers for delegation set.")
  # args greedily grabs any files or zones listed after the options
  arg(:args, :any)

  version R53z::VERSION

  use_log_level_option :toggle_debug_on_signal => 'USR1'

  go!
end

